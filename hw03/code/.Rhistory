probability_2=c_2*p^k*p^(n-k)
n=10
k=3
p=1/6
c_1=factorial(n)/(factorial(k)*factorial(n-k))
c_2=choose(n,k)
probability_1=c_1*p^k*(1-p)^(n-k)
probability_2=c_2*p^k*(1-p)^(n-k)
dbnomial
n <- 10
k <- 3
p <- 1/6
c_1 <- factorial(n)/(factorial(k)*factorial(n-k))
c_2 <- choose(n,k)
probability_1 <- c_1*p^k*(1-p)^(n-k)
probability_2 <- c_2*p^k*(1-p)^(n-k)
n <- 5
k <- 2
p <- 0.5
c_1 <- factorial(n)/(factorial(k)*factorial(n-k))
c_2 <- choose(n,k)
probability_1 <- c_1*p^n
probability_2 <- c_2*p^n
d_1 <- dbinom(2, size=5, prob=0.5)
d_2 <- dbinom(3, size=3, prob=1/6)
d_1 <- dbinom(2, size=5, prob=0.5)
d_2 <- dbinom(3, size=3, prob=1/6)
#modify
d_3 <- dbinom(2, size=5, prob=0.35)
d_4 <- dbinom(3, size=5, prob=0.35)+dbinom(4, size=5, prob=0.35)+dbinom(5, size=5, prob=0.35)
install.packages(c("stringr",'RColorBrewer','XML'))
install.packages(c("stringr", "RColorBrewer", "XML"))
install.packages(c("stringr",'RColorBrewer','XML'))
install.packages(c("stringr",'RColorBrewer','XML'))
x
install.packages(c("stringr",'RColorBrewer','XML'))
x <- 2
3*x^2+4*x+8
x <- -3:3
3*x^2+4*x+8
install.packages("stringr")
install.packages(c("stringr",'RColorBrewer','XML'))
library("stringr")
x <- 2
3*x^2+4*x+8
x <- -3:3
3*x^2+4*x+8
library("stringr")
install.packages(c("stringr","RColorBrewer","XML"))
library("stringr")
install.packages(c("stringr", "RColorBrewer", "XML"))
library(stringr)
source('~/.active-rstudio-document', echo=TRUE)
typeof(a)
mode(a)
a=NA
a
a[1]=2
a
z
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
typeof(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
x
dim(x)=c(4,2)
x
dim(x)=c(2,2,2)
x
m=matrix(x,nrow=2,ncol=4,byrow=TRUE)
x
x[2,2,1]
m=matrix(x,nrow=2,ncol=4)
x
a=c(1,2,3;4,5,6)
a=(1,2,3,4,5,6)
a=c(1,2,3,4,5,6)
dim(a)=c(2,3)
x
a
matrix(a,nrol=2,ncol=3,byrow=TRUE)
matrix(a,nrow=2,ncol=3,byrow=TRUE)
a<- c('a','b','c')
s<-factor(a)
typeof(s)
mode(s)
source('~/.active-rstudio-document', echo=TRUE)
load('nba2017-salary-points.RData')
ls()
length(a)
a= c(1,2,3)
rm(a=ls())
rm(alist=ls(a))
rm(list=ls(a))
rm(a
rm(ls(a))
rm(list=a)
rm(list=c(1,2,3))
rm(list=ls())
rm(list=ls()[1,2])
rm(list=ls()[1:2])
rm(a)
a=c(1,2,3)
rm(a)
a= c(1,2,3,4,)
a= c(1,2,3,4)
b<- a(c(1:2))
b<- a[c(1:2)]
b<- a[1:2]
a[0]
four[0]
a= c(2,3,4,5)
a[6]
a[0]
b=a[0]
is.zero(b)
is.empty(b)
b+2
load("nba2017-salary-points.RData")
ls()
summary(player)
summary(player)
mean(player)
summary(player[])
summary(player[1:end])
summary(player[1:length(player)])
summary(points)
summary(points)
pointsm <- mean(points)
summary(points)
pointsm <- mean(points)
summary(points)
mean(points)
sd(points, na.rm = FALSE)
summary(points)
mean(points)
sd(points, na.rm = FALSE)
hist(points)
summary(points)
mean(points)
sd(points, na.rm = FALSE)
hist(points)
boxplot(points)
summary(points)
mean(points)
sd(points, na.rm = FALSE)
hist(points)
boxplot(points)
d <-density(points)
plot(d)
table(position)
table(position)
prop.table(position,1)
t <- table(position)
prop.table(t,1)
t <- table(position)
prop.table(t)
t <- table(position)
t
prop.table(t)
t <- table(position)
t
p <-prop.table(t)
sum(p)
t <- table(position)
t
p <-prop.table(t)
barplot(p)
t <- table(position)
t
prop.table(t)
barplot(t)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
knitr::opts_chunk$set(echo = TRUE)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(analone)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
col_names <- c(
'sex',
'length',
'diameter',
'height',
'whole_weight',
'shucked_weight',
'viscera_weight',
'shell_weight',
'rings'
)
col_types <- c(
'factor',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'integer'
)
abalone <- read.table(
'abalone.data',
col.names = col_names,
colClasses = col_types,
sep = ","
)
View(abalone)
View(abalone)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
col_names <- c(
'sex',
'length',
'diameter',
'height',
'whole_weight',
'shucked_weight',
'viscera_weight',
'shell_weight',
'rings'
)
col_types <- c(
'factor',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'integer'
)
abalone <- read.table(
'abalone.data',
col.names = col_names,
colClasses = col_types,
sep = ","
)
str(abalone, vec.len = 1)
str(abalone, vec.len = 1)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
col_names <- c(
'sex',
'length',
'diameter',
'height',
'whole_weight',
'shucked_weight',
'viscera_weight',
'shell_weight',
'rings'
)
col_types <- c(
'factor',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'integer'
)
abalone <- read.table(
'abalone.data',
col.names = col_names,
colClasses = col_types,
sep = ","
)
str(abalone, vec.len = 1)
read.csv(abalone.data)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
col_names <- c(
'sex',
'length',
'diameter',
'height',
'whole_weight',
'shucked_weight',
'viscera_weight',
'shell_weight',
'rings'
)
col_types <- c(
'factor',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'numeric',
'integer'
)
abalone <- read.table(
'abalone.data',
col.names = col_names,
colClasses = col_types,
sep = ","
)
str(abalone, vec.len = 1)
read.csv("abalone.data",sep=",")
plot(abalone$sex)
plot(abalone$sex)
table_sex <- table(abalone$sex)
barplot(table_sex)
plot(abalone$sex)
table_sex <- table(abalone$sex)
barplot(table_sex)
hist(abalone$diameter)
boxplot(abalone$diameter, horizontal = TRUE)
table_sex
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1"
bridge <- read.table(url,sep=",")
bridge
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1"
bridge <- read.table(url,sep=",")
str(bridge, vec.len = 1)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1"
bridge <- read.table(url,sep=",")
str(bridge, vec.len = 1)
col_names <- c(
'IDENTIF',
'RIVER',
'LOCATION',
'ERECTED',
'PURPOSE',
'LENGTH',
'LANES',
'CLEAR-G',
'T-OR-D',
'MATERIAL',
'SPAN',
'REL-L',
'TYPE'
)
col_types <- c(
'factor',
'factor',
'factor',
'int',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor'
)
bridge <- read.table(
'bridges.data.version1',
col.names = col_names,
colClasses = col_types,
sep = ","
)
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1'
destination <- 'bridge.data'
download.file(origin, destination)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1"
bridge <- read.table(url,sep=",")
str(bridge, vec.len = 1)
col_names <- c(
'IDENTIF',
'RIVER',
'LOCATION',
'ERECTED',
'PURPOSE',
'LENGTH',
'LANES',
'CLEAR-G',
'T-OR-D',
'MATERIAL',
'SPAN',
'REL-L',
'TYPE'
)
col_types <- c(
'factor',
'factor',
'factor',
'int',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor'
)
bridge <- read.table(
'bridge.data',
col.names = col_names,
colClasses = col_types,
sep = ","
)
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/bridges/bridges.data.version1"
bridge <- read.table(url,sep=",")
str(bridge, vec.len = 1)
col_names <- c(
'IDENTIF',
'RIVER',
'LOCATION',
'ERECTED',
'PURPOSE',
'LENGTH',
'LANES',
'CLEAR-G',
'T-OR-D',
'MATERIAL',
'SPAN',
'REL-L',
'TYPE'
)
col_types <- c(
'factor',
'factor',
'factor',
'integer',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor',
'factor'
)
bridge <- read.table(
'bridge.data',
col.names = col_names,
colClasses = col_types,
sep = ","
)
read.csv("bridge.data",sep=",")
str(bridge)
str(bridge)
summay(bridge)
str(bridge)
summary(bridge)
head(bridge)
tail(bridge)
dim(bridge)
names(bridge)
colnames(bridge)
nrow(bridge)
ncol(bridge)
summary(bridge)
summary(bridge).ERECTED.Min
summary(bridge)$ERECTED.Min
summary(bridge)
summary(bridge)[5]
summary(bridge)[[5]
summary(bridge)[[5]]
summary(bridge)
summary(bridge$PURPOSE)
summary(bridge$PURPOSE)
summary(bridge$MATERIAL)
summary(bridge$ERECTED)
summary(bridge$PURPOSE)
summary(bridge$MATERIAL)
summary(bridge$ERECTED)
summary(bridge$LENGTH)
plot(bridge$LENGTH,bridge$ERECTED)
3.045*exp(-0.25/5.189/298*10^(-19))/exp(-0.25/5.189/308*10^(-19))
