interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
x <- seq(from=-2,to=2, by=0.4)
y <- x^3
plot(x,y)
library(ggplot2)
Brute_force <- function(a,b,n) {
f <- function(x){
x^3
}
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
x <- seq(from=-2,to=2, by=0.4)
y <- x^3
ggplot(aes(x,y))+
geom_point()+
hline(y=0)
Brute_force <- function(a,b,n) {
f <- function(x){
x^3
}
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
x <- seq(from=-2,to=2, by=0.4)
y <- x^3
plot(x,y)
Brute_force <- function(a,b,n) {
f <- function(x){
x^3
}
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,1000)
x <- seq(from=-2,to=2, by=0.4)
y <- x^3
plot(x,y)
Brute_force <- function(a,b,n) {
f <- function(x){
x^3
}
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.4)
y <- x^3
plot(x,y)
knitr::opts_chunk$set(echo = TRUE)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.0001)
y <- x^3
plot(x,y)
include_graphics('images/newton')
library(knitr)
include_graphics('images/newton')
df <- function(x)3*x^2
Newton_Raphson <- function(r_0, tolerance){
r <- r_0
while (abs(r)>tolerance){
r <- r-f(r)/df(r)
}
r
}
Newton_Raphson(2,0.001)
Newton_Raphson(2,0.0001)
library(knitr)
include_graphics('images/newton',auto_pdf = TRUE)
df <- function(x)3*x^2
Newton_Raphson <- function(r_0, tolerance){
r <- r_0
while (abs(r)>tolerance){
r <- r-f(r)/df(r)
}
r
}
Newton_Raphson(2,0.001)
Newton_Raphson(2,0.0001)
library(knitr)
include_graphics('images/newton.png',auto_pdf = TRUE)
df <- function(x)3*x^2
Newton_Raphson <- function(r_0, tolerance){
r <- r_0
while (abs(r)>tolerance){
r <- r-f(r)/df(r)
}
r
}
Newton_Raphson(2,0.001)
Newton_Raphson(2,0.0001)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.3)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.2)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=10)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.002)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.02)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.5)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.2)
knitr::opts_chunk$set(echo = TRUE)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.1)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.05)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.07)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.07, main='y=x^3 Plot')
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
x <- seq(from=-2,to=2, by=0.001)
y <- x^3
plot(x,y,lwd=0.07, main='y=x^3')
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
y <- x^3
plot(x,y,lwd=0.07, main='y=x^3')
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
curve(x^3,from=-2,to=2,n=100,add=FALSE)
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
curve(x^3,from=-2,to=2,n=100,add=FALSE,ylab='y')
f <- function(x){
x^3
}
Brute <- function(a,b,n) {
interval <- (b-a)/n
x <- seq(from=a,to=b,by=interval)
i <- 1
repeat{
result <- f(x[i])*f(x[i+1])
i <- i+1
if(result <= 0) break
}
(f(x[i])+f(x[i-1]))/2
}
Brute(-2,2,10)
Brute(-2,2,100)
Brute(-2,2,100000)
curve(x^3,from=-2,to=2,n=100,add=FALSE,ylab='y',main='y vs. x')
library(knitr)
include_graphics('images/newton.png',auto_pdf = TRUE)
df <- function(x)3*x^2
Newton_Raphson <- function(r_0, tolerance){
r <- r_0
while (abs(r)>tolerance){
r <- r-f(r)/df(r)
}
r
}
Newton_Raphson(2,0.001)
Newton_Raphson(2,0.0001)
library(knitr)
include_graphics('images/newton.png',auto_pdf = TRUE)
df <- function(x)3*x^2
Newton_Raphson <- function(r_0, tolerance){
r <- r_0
while (abs(r)>tolerance){
r <- r-f(r)/df(r)
}
r
}
Newton_Raphson(2,0.001)
Newton_Raphson(2,0.0001)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
include_graphics('images/newton.png',auto_pdf = TRUE)
